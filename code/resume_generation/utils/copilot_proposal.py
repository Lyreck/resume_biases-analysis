## The thing here is that it just doubles {} into {{}}. SO any latex code that you put in Python needs to have {{}} instead of {}.


import os
import subprocess

def insert_descriptions_to_tex(name, company, association, gender):
    """
    Inserts the given details into a LaTeX template and renders it as a PDF.
    """
    # LaTeX template with escaped curly braces
    template = r'''
    \documentclass[letterpaper,11pt]{{article}}
    \usepackage[empty]{{fullpage}}
    \usepackage[hidelinks]{{hyperref}}
    \usepackage{{fancyhdr}}
    \pagestyle{{fancy}}
    \fancyhf{{}}
    \renewcommand{{\headrulewidth}}{{0pt}}
    \renewcommand{{\footrulewidth}}{{0pt}}
    \begin{{document}}

    %----------HEADING----------
    \begin{{center}}
        \textbf{{\Huge \scshape {name}}} \\ \vspace{{1pt}}
        \small Gender: {gender} $|$ Company: {company} $|$ Association: {association}
    \end{{center}}

    \end{{document}}
    '''

    # Replace placeholders with actual values
    latex_code = template.format(name=name, company=company, association=association, gender=gender)

    # Write the LaTeX code to a .tex file
    tex_filename = "output_resume.tex"
    with open(tex_filename, "w") as tex_file:
        tex_file.write(latex_code)

    # Compile the .tex file into a PDF using pdflatex
    try:
        subprocess.run(["pdflatex", tex_filename], check=True)
        print(f"PDF generated successfully: {os.path.splitext(tex_filename)[0]}.pdf")
    except subprocess.CalledProcessError as e:
        print(f"Error during PDF generation: {e}")

    # Clean up auxiliary files generated by pdflatex
    for ext in [".aux", ".log"]:
        aux_file = f"{os.path.splitext(tex_filename)[0]}{ext}"
        if os.path.exists(aux_file):
            os.remove(aux_file)



if __name__ == "__main__":
    insert_descriptions_to_tex("John Doe", "Tech Company", "Tech Association", "Male")